HOCKEY PLAYER DETECTION - DOCUMENTATION AND INSTRUCTIONS
---------------------------------------------------


TrackPlayers/
-------------
Contains a cpp program to detect hockey players in a hockey arena

To run the program over an image compile the program and run passing a path to an image as an argument. File will detect players, preparing an image before detection and will save a result as filename-out.jpg

Tools.hpp: Contains some simple functions which are used in the main program
	drawCircle(): Draws a circle formatted to be placed near the bottom of a drawn rectangle on the image
	
	rectForCircle(): Draws a smaller rectangle within a bounding rectangle, which will provide a guide for drawing a circle
	
	scaleRect(): scales a rectangle so it will be drawn on the same position in the image no matter how the image has grown/shrunk
	
	makeGray(): converts an RGB image to Grayscale
	
	createBinaryImage(): Creates a binary image from the passed in image
	
	addContrast(): Adds contrast to an image
	
	applyMask(): Accepts 3 images, a mask, an image to apply that mask over and the result image pointer.
	
Detector.hpp: 
The main class that has methods to prepare images for the processing. 
Has a method MakeMask, that automatically detects the rink area to mask the image and remove the crowd are.
	Apply morph opening to remove small details, Blur the image, Dilate to remove some big chunks, Erode to return to get back lost area of the rink, Use bitwise flip to get a mask. Comments are in Detector.hpp.

Method PrepareForProcessing makes players bodies well defined on rink by taking a difference between the original and blurred+dilated image. (pass option 2 to the method)
Detect - detects player on image without pre-processing the image (detect on the image you pass, you can prepare your own image as you like)
DetectWithPreprocessing - detects player on image preparing the image first (mask + contours)

HogDetector.cpp: Wrapper class to easily use HOG detector
	hog: instance of a HogDetector with the specified parameters
	
	detect(): runs the hog detector and returns a vector of found bounding rectangles
	
	adjustRect(): Slightly adjusts the returned rectangles to make them cleaner
	
	descrition(): Returns a string of all the detector parameters
	
Main.cpp: Main program to run player detection, MUST PASS IN IMAGE FILENAME
	main(): reads passed in image, determines new filenames for output images, and calls all the functions
	
	DrawDetected(): draws detected rectangles on the source image
	
	save(): saves passed in image to current folder
			
	MarkDetectedPlayer(): Draws bounding rectangles and circles on the source image
	



ImageAnnotator/
---------------
Contains a cpp program to annotate rectangles onto images to build our grund truth dataset.

CSVReader.h: reads in data (filenames) from a csv file for use in the program

Source.cpp: Main file, must pass csv file as argument, this program iterates over images in a passed in image set,
			opening each image in a window. The user can then use the mouse to put dots on players in
			the image to define the ground truth of the image.
			
Object-Detector/
----------------
Contains a python programs to manually annotate images, create a dataset of the annotated images, and train a machine learning model
to recognize the objects being annotated in these images.

Instructions to run the annotator are included in INSTRUCTIONS.md file inside Object-Detector directory